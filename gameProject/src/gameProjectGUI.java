
import java.util.Random;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * simple class that contains all the code for the game to function
 * 
 * @author Jacob Larose
 */
public class gameProjectGUI extends javax.swing.JFrame {
    
    /**
     * Creates new form gameProjectGUI
     */
    public gameProjectGUI() {
        initComponents();
    }
    
    // initialises global variables
    char []lettersUnmixed;
    boolean [] correct;
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        startMenu = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        start = new javax.swing.JButton();
        difficulty = new javax.swing.JComboBox();
        Quit = new javax.swing.JButton();
        gameMenu = new javax.swing.JPanel();
        wordMixed = new javax.swing.JLabel();
        letter1 = new javax.swing.JButton();
        letter2 = new javax.swing.JButton();
        letter3 = new javax.swing.JButton();
        letter4 = new javax.swing.JButton();
        letter5 = new javax.swing.JButton();
        messages = new javax.swing.JLabel();
        correctWord = new javax.swing.JLabel();
        LettersGot = new javax.swing.JLabel();
        finalMenu = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        playAgain = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        startMenu.setBackground(new java.awt.Color(153, 0, 153));

        title.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/titleLogo.png"))); // NOI18N

        start.setForeground(new java.awt.Color(196, 41, 37));
        start.setText("<html> <font size=\"25\">START</font></html>");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        difficulty.setForeground(new java.awt.Color(196, 41, 37));
        difficulty.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<html> <font size=\"20\">4-5 letters</font></html>" }));
        difficulty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                difficultyActionPerformed(evt);
            }
        });

        Quit.setLabel("Quit");
        Quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout startMenuLayout = new javax.swing.GroupLayout(startMenu);
        startMenu.setLayout(startMenuLayout);
        startMenuLayout.setHorizontalGroup(
            startMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, startMenuLayout.createSequentialGroup()
                .addContainerGap(151, Short.MAX_VALUE)
                .addComponent(difficulty, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(174, 174, 174))
            .addGroup(startMenuLayout.createSequentialGroup()
                .addGroup(startMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(startMenuLayout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(title))
                    .addGroup(startMenuLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Quit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        startMenuLayout.setVerticalGroup(
            startMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(startMenuLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(title)
                .addGap(97, 97, 97)
                .addGroup(startMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(difficulty, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addComponent(Quit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        gameMenu.setVisible(false);
        gameMenu.setBackground(new java.awt.Color(153, 0, 153));

        wordMixed.setFont(new java.awt.Font("Tekton Pro", 0, 48)); // NOI18N
        wordMixed.setForeground(new java.awt.Color(255, 51, 51));

        letter1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                letter1ActionPerformed(evt);
            }
        });

        letter2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                letter2ActionPerformed(evt);
            }
        });

        letter3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                letter3ActionPerformed(evt);
            }
        });

        letter4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                letter4ActionPerformed(evt);
            }
        });

        letter5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                letter5ActionPerformed(evt);
            }
        });

        messages.setFont(new java.awt.Font("Tekton Pro", 0, 24)); // NOI18N
        messages.setForeground(new java.awt.Color(255, 51, 51));

        correctWord.setFont(new java.awt.Font("Tekton Pro", 0, 24)); // NOI18N
        correctWord.setForeground(new java.awt.Color(255, 51, 51));

        LettersGot.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        LettersGot.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout gameMenuLayout = new javax.swing.GroupLayout(gameMenu);
        gameMenu.setLayout(gameMenuLayout);
        gameMenuLayout.setHorizontalGroup(
            gameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameMenuLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(gameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gameMenuLayout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(wordMixed, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(gameMenuLayout.createSequentialGroup()
                        .addGroup(gameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(gameMenuLayout.createSequentialGroup()
                                .addComponent(messages, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(141, 141, 141))
                            .addGroup(gameMenuLayout.createSequentialGroup()
                                .addComponent(letter1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86)
                                .addComponent(letter2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)
                                .addComponent(letter4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(gameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gameMenuLayout.createSequentialGroup()
                                .addComponent(LettersGot, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(correctWord, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(gameMenuLayout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(letter5, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(letter3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        gameMenuLayout.setVerticalGroup(
            gameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(wordMixed, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addGroup(gameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(messages, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                    .addComponent(correctWord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LettersGot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addGroup(gameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(letter2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(letter3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(letter5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(letter1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(letter4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(125, 125, 125))
        );

        finalMenu.setBackground(new java.awt.Color(153, 0, 153));
        finalMenu.setVisible(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("You WIN");

        playAgain.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        playAgain.setForeground(new java.awt.Color(255, 51, 51));
        playAgain.setText("Play Again");
        playAgain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playAgainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout finalMenuLayout = new javax.swing.GroupLayout(finalMenu);
        finalMenu.setLayout(finalMenuLayout);
        finalMenuLayout.setHorizontalGroup(
            finalMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, finalMenuLayout.createSequentialGroup()
                .addContainerGap(261, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(255, 255, 255))
            .addGroup(finalMenuLayout.createSequentialGroup()
                .addGap(301, 301, 301)
                .addComponent(playAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        finalMenuLayout.setVerticalGroup(
            finalMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(finalMenuLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98)
                .addComponent(playAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(215, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(startMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(gameMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(finalMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(startMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(gameMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(finalMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * does nothing at all in this version
     * 
     * @param evt 
     */
    private void difficultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_difficultyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_difficultyActionPerformed
    /**
     * @param evt 
     * 
     * sets the first jPanel to invisible and displays the second one, along with making all the letter buttons as invisible as initialization
     * @see gameProjectGUI#setup() 
     */
    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        startMenu.setVisible(false);
        gameMenu.setVisible(true);
        
        letter1.setVisible(false);
        letter2.setVisible(false);
        letter3.setVisible(false);
        letter4.setVisible(false);
        letter5.setVisible(false);
        setup();
    }//GEN-LAST:event_startActionPerformed
    /**
     * @param evt 
     * 
     * checks to see if the button is clicked in the right order based off the "correct" array, same operations as:
     * @see gameProjectGUI#letter2ActionPerformed(java.awt.event.ActionEvent) 
     * @see gameProjectGUI#letter3ActionPerformed(java.awt.event.ActionEvent) 
     * @see gameProjectGUI#letter4ActionPerformed(java.awt.event.ActionEvent) 
     * @see gameProjectGUI#letter5ActionPerformed(java.awt.event.ActionEvent) 
     */
    private void letter1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_letter1ActionPerformed
        int i;
        for (i=0; i<correct.length; i++){
            if(correct[i]==false){
                break;
            }
        }
        
        System.out.println("letter is" +i);
        if (letter1.getText().equals(Character.toString(lettersUnmixed[i]))){
            correct[i]=true;
            LettersGot.setText(LettersGot.getText()+lettersUnmixed[i]);
            messages.setText("corect");
            System.out.println("corect");
        }else{
            correct[i]=false;
            messages.setText("incorect");
            System.out.println("incorect");
        }
        checkDone();
    }//GEN-LAST:event_letter1ActionPerformed
    /**
     * 
     * @param evt 
     * 
     * @see gameProjectGUI#letter1ActionPerformed(java.awt.event.ActionEvent) 
     */
    private void letter2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_letter2ActionPerformed
        int i;
        for (i = 0; i < correct.length; i++) {
            if (correct[i] == false) {
                break;
            }
        }
        
        System.out.println("letter is" +i);
        if (letter2.getText().equals(Character.toString(lettersUnmixed[i]))) {
            correct[i] = true;
            LettersGot.setText(LettersGot.getText()+lettersUnmixed[i]);
            messages.setText("corect");
            System.out.println("corect");
        } else {
            correct[i] = false;
            messages.setText("incorect");
            System.out.println("incorect");
        }
        checkDone();
    }//GEN-LAST:event_letter2ActionPerformed
    /**
     * 
     * @param evt 
     * 
     * @see gameProjectGUI#letter1ActionPerformed(java.awt.event.ActionEvent) 
     */
    private void letter3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_letter3ActionPerformed
        int i;
        for (i=0; i<correct.length; i++){
            if(correct[i]==false){
                break;
            }
        } 
        
        System.out.println("letter is" +i);
        if (letter3.getText().equals(Character.toString(lettersUnmixed[i]))){
            correct[i]=true;
            LettersGot.setText(LettersGot.getText()+lettersUnmixed[i]);
            messages.setText("corect");
            System.out.println("corect");
        }else{
            correct[i]=false;
            messages.setText("incorect");
            System.out.println("incorect");
        }
        checkDone();
    }//GEN-LAST:event_letter3ActionPerformed
    /**
     * 
     * @param evt 
     * 
     * @see gameProjectGUI#letter1ActionPerformed(java.awt.event.ActionEvent) 
     */
    private void letter4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_letter4ActionPerformed
        int i;
        for (i=0; i<correct.length; i++){
            if(correct[i]==false){
                break;
            }
        } 
        
        System.out.println("letter is" +i);
        if (letter4.getText().equals(Character.toString(lettersUnmixed[i]))){
            correct[i]=true;
            LettersGot.setText(LettersGot.getText()+lettersUnmixed[i]);
            messages.setText("corect");
            System.out.println("corect");
        }else{
            correct[i]=false;
            messages.setText("incorect");
            System.out.println("incorect");
        }
        checkDone();
    }//GEN-LAST:event_letter4ActionPerformed
    /**
     * 
     * @param evt 
     * 
     * @see gameProjectGUI#letter1ActionPerformed(java.awt.event.ActionEvent) 
     */
    private void letter5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_letter5ActionPerformed
        int i;
        for (i=0; i<correct.length; i++){
            if(correct[i]==false){
                break;
            }
        } 
        
        System.out.println("letter is" +i);
        if (letter5.getText().equals(Character.toString(lettersUnmixed[i]))){
            correct[i]=true;
            LettersGot.setText(LettersGot.getText()+lettersUnmixed[i]);
            messages.setText("corect");
            System.out.println("corect");
        }else{
            correct[i]=false;
            messages.setText("incorect");
            System.out.println("incorect");
        }
        checkDone();
    }//GEN-LAST:event_letter5ActionPerformed

    private void playAgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playAgainActionPerformed
        finalMenu.setVisible(false);
        startMenu.setVisible(true);
    }//GEN-LAST:event_playAgainActionPerformed

    private void QuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitActionPerformed
       System.exit(0);// TODO add your handling code here:
    }//GEN-LAST:event_QuitActionPerformed
    /**
     * checks if the button pushed is the last one in the word
     */
    public void checkDone(){
        boolean done=true;
        for (int i=0; i<correct.length; i++){
            if (correct[i]!=true){
                done=false;
            }
        }
        if (done==true){
            gameMenu.setVisible(false);
            finalMenu.setVisible(true);
        } 
    }
    /**
     * initializes all local variables
     * calls on
     * @see gameProjectGUI#wordSplit(java.lang.String) 
     * @see gameProjectGUI#shuffleLetters(char[]) 
     * 
     * initializes buttons
     * initializes correct array
     */
    public void setup(){
        //initialise variables
        String wordsArray[] = {"quack", "jumbo", "booze", "milk", "brush", "clean", "grave", "food", "drink", "crack", "music", "break","wake","cake", "near", "meet", "meat","fame", "type", "loan"};
        int choice = -1;
        choice = wordChoose(choice);
        String word=wordsArray[choice];
        System.out.println(word);
        lettersUnmixed= wordSplit(word);
        wordMixed.setText("");
        messages.setText("");
        LettersGot.setText("");
        System.out.println("setup");
        
        // Implementing Fisher–Yates shuffle
        char[] lettersMixed= shuffleLetters(lettersUnmixed);
        lettersUnmixed= wordSplit(word);
        
        //output letters to console
        for (int i=0; i<lettersMixed.length; i++){
            System.out.println(lettersMixed[i]);
        }
        for (int i=0; i<lettersUnmixed.length; i++){
            System.out.println(lettersUnmixed[i]);
        }
        
        //put mixed letter in display label 
        for (int i=0; i<lettersMixed.length; i++){
            wordMixed.setText(wordMixed.getText() + lettersMixed[i]);
        }
        
        //decide which buttons to show and labels them
        System.out.println(lettersMixed.length);
        switch (lettersMixed.length){
            case 3:
                letter1.setVisible(true);
                letter2.setVisible(true);
                letter3.setVisible(true);
                letter1.setText( Character.toString(lettersMixed[0]));
                letter2.setText( Character.toString(lettersMixed[1]));
                letter3.setText( Character.toString(lettersMixed[2]));
                break;
            case 4:
                letter1.setVisible(true);
                letter2.setVisible(true);
                letter3.setVisible(true);
                letter4.setVisible(true);
                
                letter1.setText( Character.toString(lettersMixed[0]));
                letter2.setText( Character.toString(lettersMixed[1]));
                letter3.setText( Character.toString(lettersMixed[2]));
                letter4.setText( Character.toString(lettersMixed[3]));
                break;
            case 5:
                letter1.setVisible(true);
                letter2.setVisible(true);
                letter3.setVisible(true);
                letter4.setVisible(true);
                letter5.setVisible(true);
                
                letter1.setText( Character.toString(lettersMixed[0]));
                letter2.setText( Character.toString(lettersMixed[1]));
                letter3.setText( Character.toString(lettersMixed[2]));
                letter4.setText( Character.toString(lettersMixed[3]));
                letter5.setText( Character.toString(lettersMixed[4]));
                break;
            default:
                System.out.print("error");
                break;
        }
        
        // set all letters to incorect initially
        correct= new boolean[lettersMixed.length];
        for (int i=0; i<lettersMixed.length; i++){
            correct[i]=false;
        } 
        
    }
    /**
     * 
     * @param choice
     * @return 
     * 
     * random generation of int to use as index value for selection of a word from the array
     */
    public static int wordChoose(int choice){
        choice = (int) ((Math.random() * 3));
        return choice;
    }
    
    /**
     * 
     * @param word
     * @return 
     * 
     * uses [string].toCharArray(); to convert selected word to charecters for shuffling
     */
    public static char[] wordSplit(String word ){
        char[] lettersUnmixed= word.toCharArray();
        return lettersUnmixed;
    }
    
    /**
     * 
     * @param lettersUnmixed
     * @return 
     * 
     * implements Fisher-Yates shuffle to mix the chars in the array
     */
    static char[] shuffleLetters(char[] lettersUnmixed) {
        Random rnd = new Random();
        for (int i = lettersUnmixed.length - 1; i > 0; i--) {
            int index = rnd.nextInt(i + 1);
            // Simple swap
            char a = lettersUnmixed[index];
            lettersUnmixed[index] = lettersUnmixed[i];
            lettersUnmixed[i] = a;
        }
        return lettersUnmixed;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gameProjectGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gameProjectGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gameProjectGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gameProjectGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gameProjectGUI().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LettersGot;
    private javax.swing.JButton Quit;
    private javax.swing.JLabel correctWord;
    private javax.swing.JComboBox difficulty;
    private javax.swing.JPanel finalMenu;
    private javax.swing.JPanel gameMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton letter1;
    private javax.swing.JButton letter2;
    private javax.swing.JButton letter3;
    private javax.swing.JButton letter4;
    private javax.swing.JButton letter5;
    private javax.swing.JLabel messages;
    private javax.swing.JButton playAgain;
    private javax.swing.JButton start;
    private javax.swing.JPanel startMenu;
    private javax.swing.JLabel title;
    private javax.swing.JLabel wordMixed;
    // End of variables declaration//GEN-END:variables
}
